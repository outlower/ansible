---
  - name: Copy restic binary to target
    copy:
      src: bin/restic_0.18.0_linux_amd64
      dest: /usr/local/bin/restic
      mode: '0755'

  - name: Ensure backup destination exists
    file:
      path: "{{ restic_backup_destination }}/{{ ansible_hostname }}"
      state: directory
      mode: '0755'

  - name: Initialize restic repository (if not initialized)
    command: "restic init --repo {{ restic_backup_destination }}/{{ ansible_hostname }}"
    args:
      creates: "{{ restic_backup_destination }}/{{ ansible_hostname }}/config"
    environment:
        RESTIC_PASSWORD: "{{ restic_password }}"

  - name: Create systemd service for restic backup
    copy:
      dest: /etc/systemd/system/restic-backup.service
      content: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=Restic Backup Service
        After=network.target

        [Service]
        Type=oneshot
        Environment=RESTIC_PASSWORD={{ restic_password }}
        Environment=RESTIC_REPOSITORY={{ restic_backup_destination }}/{{ ansible_hostname }}
        ExecStart=/usr/local/bin/restic backup {{ restic_backup_source }} --repo {{ restic_backup_destination }}/{{ ansible_hostname }}
        ExecStartPost=/usr/local/bin/restic forget --repo {{ restic_backup_destination }}/{{ ansible_hostname }} --keep-within {{ restic_backup_retention }} --prune
      mode: '0644'

  - name: Create systemd service for restic backup
    copy:
      dest: /etc/systemd/system/restic-backup.service
      content: |
        [Install]
        WantedBy=multi-user.target

        [Unit]
        Description=Restic Backup Service
        After=network.target

        [Service]
        Type=oneshot
        Environment=RESTIC_PASSWORD={{ restic_password }}
        Environment=RESTIC_REPOSITORY={{ restic_backup_destination }}/{{ ansible_hostname }}
        ExecStart=/usr/local/bin/restic backup {{ restic_backup_source }} --cleanup --keep-within {{ restic_backup_retention }}
      mode: '0644'

  - name: Create systemd timer for restic backup
    copy:
      dest: /etc/systemd/system/restic-backup.timer
      content: |
        [Unit]
        Description=Run Restic Backup {{ restic_backup_schedule }}

        [Timer]
        OnCalendar=daily
        Persistent=true

        [Install]
        WantedBy=timers.target
      mode: '0644'

  - name: Add RESTIC environment variables to /etc/environment
    lineinfile:
      path: /etc/environment
      line: "{{ item }}"
      state: present
    with_items:
      - "RESTIC_PASSWORD={{ restic_password }}"
      - "RESTIC_REPOSITORY={{ restic_backup_destination }}/{{ ansible_hostname }}"
    become: yes

  - name: Reload systemd daemon
    systemd:
      daemon_reload: yes

  - name: Enable and start restic backup timer
    systemd:
      name: restic-backup.timer
      enabled: yes
      state: started
